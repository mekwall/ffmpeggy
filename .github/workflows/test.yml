name: Test

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      os:
        required: true
        type: string
      debug:
        required: false
        type: boolean
        default: false
      coverage:
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: Test
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        shell: bash
        run: |
          if [ "${{ inputs.coverage }}" = "true" ]; then
            echo "Running tests with coverage..."
            yarn test:coverage
          else
            echo "Running tests without coverage..."
            yarn test
          fi
        env:
          DEBUG: ${{ inputs.debug && '*' || '' }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: List test results
        shell: bash
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Looking for test results..."
          find . -name "*.xml" -type f 2>/dev/null || echo "No XML files found"
          find . -name "test-results.xml" -type f 2>/dev/null || echo "test-results.xml not found"

      - name: Publish Test Results
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Vitest Tests
          path: test-results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Verify coverage files
        if: inputs.coverage
        shell: bash
        run: |
          echo "Checking for coverage files..."
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la

          if [ -d "coverage" ]; then
            echo "Coverage directory exists:"
            ls -la coverage/

            # Check for different coverage file formats
            if [ -f "coverage/coverage-final.json" ]; then
              echo "✅ coverage-final.json found"
              echo "File size: $(wc -c < coverage/coverage-final.json) bytes"
            fi

            if [ -f "coverage/lcov.info" ]; then
              echo "✅ lcov.info found"
              echo "File size: $(wc -c < coverage/lcov.info) bytes"
            fi

            if [ -f "coverage/index.html" ]; then
              echo "✅ HTML coverage report found"
            fi

            # If no coverage files found, show what's in the directory
            if [ ! -f "coverage/coverage-final.json" ] && [ ! -f "coverage/lcov.info" ]; then
              echo "❌ No coverage files found in coverage/ directory"
              echo "Contents of coverage/ directory:"
              find coverage/ -type f -name "*" | head -10
              exit 1
            fi
          else
            echo "❌ Coverage directory not found"
            exit 1
          fi

      - name: Upload coverage to Codecov
        if: inputs.coverage && env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
          directory: ./coverage
